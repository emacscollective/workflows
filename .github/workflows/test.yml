name: Test
permissions: {}
on:
  workflow_call:
    inputs:
      workflow_ref:
        description: 'Must be the same as "uses: ...@THIS"'
        default: main
        required: false
        type: string
env:
  pwd: ${{ github.event.repository.name }}
jobs:
  matrix:
    name: 'Get matrix'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - name: 'Install Emacs'
        uses: purcell/setup-emacs@master
        with:
          version: 28.2
      - name: 'Install workflow scripts'
        uses: actions/checkout@v3
        with:
          repository: emacscollective/workflows
          ref: ${{ inputs.workflow_ref }}
          path: _scripts
          persist-credentials: false
      - name: 'Checkout ${{ github.repository }}'
        uses: actions/checkout@v3
        with:
          path: ${{ env.pwd }}
          persist-credentials: false
      - name: 'Get matrix'
        id: matrix
        working-directory: ${{ env.pwd }}
        run: |
          ../_scripts/bin/get-matrix >> $GITHUB_OUTPUT
          echo "â€¢ get-matrix: emacscollective/workflows@${{ inputs.workflow_ref }}"
  main:
    name: 'Testing using Emacs ${{ matrix.emacs }}'
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      fail-fast: false
      matrix:
        emacs: ${{ fromJson(needs.matrix.outputs.matrix) }}
    steps:
      - name: Configure git
        run: |
          git config --global user.name "A U Thor"
          git config --global user.email a.u.thor@example.com
      - name: 'Install Emacs'
        uses: purcell/setup-emacs@master
        with:
          version: ${{ matrix.emacs }}
      - name: 'Checkout scripts'
        uses: actions/checkout@v3
        with:
          repository: emacscollective/workflows
          ref: ${{ inputs.workflow_ref }}
          path: _scripts
          persist-credentials: false
      - name: 'Checkout ${{ github.repository }}'
        uses: actions/checkout@v3
        with:
          path: ${{ env.pwd }}
          persist-credentials: false
      - name: 'Install dependencies'
        working-directory: ${{ env.pwd }}
        run: ../_scripts/bin/install-deps
      - name: 'Compile'
        working-directory: ${{ env.pwd }}
        run: |
          echo '(declare-function dolist "subr")' > z.el
          make lisp
      - name: 'Test'
        working-directory: ${{ env.pwd }}
        run: make test
