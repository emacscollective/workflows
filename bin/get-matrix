#!/bin/sh
":"; exec emacs -Q --script "$0" -- "$@" # -*- mode: emacs-lisp; lexical-binding: t; -*-

(load (expand-file-name "../../lib/common" load-file-name))

(require 'lisp-mnt)
(require 'package)

;; https://www.gnu.org/software/emacs/history.html
;; 2026-08-14 - Emacs 30.2 released
;; 2025-02-23 - Emacs 30.1 released
;; 2024-06-22 - Emacs 29.4 released
;;   A security release with no new features.
;;   It is the last 29.* release, so do not skip.
;; 2024-03-24 - Emacs 29.3 released
;;   A security release with no new features.
;;   Skip it because it is very similar to 29.4.
;; 2024-01-18 - Emacs 29.2 released
;;   A bug-fix release with no new features.
;;   Skip it.
;; 2023-07-30 - Emacs 29.1 released
;; 2022-09-12 - Emacs 28.2 released
;; 2022-04-04 - Emacs 28.1 released
;; 2021-03-25 - Emacs 27.2 released
;; 2020-08-10 - Emacs 27.1 released
;; 2019-08-28 - Emacs 26.3 released
;; 2019-04-12 - Emacs 26.2 released
;;   Skip despite new features, to limit number of builds.
;;   By now nobody should use this instead of 26.3.
;; 2018-05-28 - Emacs 26.1 released
(defconst emacs-releases
  '("26.1" "26.3"
    "27.1" "27.2"
    "28.1" "28.2"
    "29.1" "29.4"
    "30.1" "30.2"))

(defun main ()
  (let* ((name (file-name-nondirectory
                (directory-file-name default-directory)))
         (lib (expand-file-name (format "%s.el" name)))
         (min nil))
    (log "• Directory: %s" default-directory)
    (unless (file-exists-p lib)
      (setq lib (expand-file-name (format "lisp/%s.el" name)))
      (unless (file-exists-p lib)
        (err "Main library not found: [lisp/]%s.el" name)))
    (log "• Library: %s" lib)
    (with-temp-buffer
      (insert-file-contents lib)
      (setq min (cadr (assq 'emacs (lm-package-requires)))))
    (unless min
      (err "Cannot determine minimal Emacs version"))
    (log "• Minimal Emacs version: %s" min)
    (let ((matrix
           (mapconcat (lambda (v) (format "%S" v))
                      (nconc (list "snapshot" "release-snapshot")
                             (seq-take-while (lambda (v) (version<= min v))
                                             (reverse emacs-releases)))
                      ",")))
      (log "• matrix=[%s]" matrix)
      (msg "matrix=[%s]" matrix))))

(kill-emacs (catch 'return (prog1 0 (main))))
